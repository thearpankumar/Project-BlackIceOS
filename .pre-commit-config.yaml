repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-merge-conflict
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-added-large-files
        args: ['--maxkb=500']
      - id: detect-private-key
      - id: check-case-conflict

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.9
    hooks:
      - id: ruff
        name: ruff lint auth-server
        language: python
        entry: bash -c 'cd auth-server && ruff check --fix --exit-non-zero-on-fix .'
        files: ^auth-server/.*\.py$
      - id: ruff
        name: ruff lint kali-ai-os
        language: python
        entry: bash -c 'cd kali-ai-os && ruff check --fix --exit-non-zero-on-fix .'
        files: ^kali-ai-os/.*\.py$

  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        name: black formatter auth-server
        files: ^auth-server/.*\.py$
      - id: black
        name: black formatter kali-ai-os
        files: ^kali-ai-os/.*\.py$

  - repo: https://github.com/pycqa/isort
    rev: 6.0.1
    hooks:
      - id: isort
        name: isort import sorting auth-server
        files: ^auth-server/.*\.py$
        args: [--profile=black]
      - id: isort
        name: isort import sorting kali-ai-os
        files: ^kali-ai-os/.*\.py$
        args: [--profile=black]

  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        name: bandit security check auth-server
        files: ^auth-server/.*\.py$
        args: [--configfile=auth-server/pyproject.toml]
        exclude: ^auth-server/(tests|migrations)/.*
      - id: bandit
        name: bandit security check kali-ai-os
        files: ^kali-ai-os/.*\.py$
        args: [--configfile=kali-ai-os/pyproject.toml]
        exclude: ^kali-ai-os/tests/.*

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.17.1
    hooks:
      - id: mypy
        name: mypy type checking auth-server
        files: ^auth-server/app/.*\.py$
        args: [--config-file=auth-server/pyproject.toml]
        additional_dependencies:
          - fastapi
          - sqlalchemy
          - pydantic
          - types-redis
          - types-PyJWT
      - id: mypy
        name: mypy type checking kali-ai-os
        files: ^kali-ai-os/src/.*\.py$
        args: [--config-file=kali-ai-os/pyproject.toml]
        additional_dependencies:
          - numpy
          - scipy
          - noisereduce
          - sounddevice
          - webrtcvad
          - pyttsx3
          - google-generativeai
          - types-requests
          - types-psutil

  - repo: local
    hooks:
      - id: pytest-check-auth-server
        name: pytest tests auth-server
        entry: bash
        language: system
        args:
          - -c
          - |
            if [[ $(git diff --cached --name-only | grep -E '^auth-server/.*\.py$') ]]; then
              cd auth-server && ENVIRONMENT=test uv run pytest tests/ --tb=short -q || exit 1
            fi
        pass_filenames: false
        always_run: false
        stages: [pre-commit]

      - id: pytest-check-kali-ai-os
        name: pytest tests kali-ai-os
        entry: bash
        language: system
        args:
          - -c
          - |
            if [[ $(git diff --cached --name-only | grep -E '^kali-ai-os/.*\.py$') ]]; then
              cd kali-ai-os && xvfb-run -a uv run pytest tests/ --tb=short -q || exit 1
            fi
        pass_filenames: false
        always_run: false
        stages: [pre-commit]

      - id: no-secrets
        name: check for secrets
        entry: bash
        language: system
        args:
          - -c
          - |
            # Check for common secret patterns (simplified for shell safety)
            if git diff --cached --name-only | xargs grep -l -E "(api_key|secret_key|password|token) *= *['"'"'"][^'"'"'"]+['"'"'"]" 2>/dev/null; then
              echo "❌ Potential secrets detected in staged files"
              exit 1
            fi
        pass_filenames: false


      - id: project-file-changes
        name: project file changes detector
        entry: bash
        language: system
        args:
          - -c
          - |
            # Detect which project files changed
            if [[ $(git diff --cached --name-only | grep -E '^auth-server/') ]]; then
              echo "✅ Auth server files detected, running auth-server checks"
            fi
            if [[ $(git diff --cached --name-only | grep -E '^kali-ai-os/') ]]; then
              echo "✅ Kali AI-OS files detected, running voice engine checks"
            fi
        pass_filenames: false
        always_run: true

ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [pytest-check-auth-server, pytest-check-kali-ai-os, no-secrets]  # Skip local hooks in CI
  submodules: false
